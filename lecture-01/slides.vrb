\frametitle{Lisp Code Example}
\scriptsize
\begin{lstlisting}[language=Lisp, caption=Common Lisp Style]
;; Calculate factorial using recursion
(defun factorial (n)
  (if (<= n 1)
      1
      (* n (factorial (- n 1)))))

;; Map a function over a list
(defun square-list (numbers)
  (mapcar #'(lambda (x) (* x x)) numbers))

;; Using higher-order functions
(let ((numbers '(1 2 3 4 5)))
  (print (factorial 5))
  (print (square-list numbers)))
\end{lstlisting}

\begin{itemize}
    \item \textbf{Functional style}: Emphasizes expressions over statements
    \item \textbf{Recursive thinking}: Problems broken down recursively
    \item \textbf{List manipulation}: Built-in operations for list processing
\end{itemize}
